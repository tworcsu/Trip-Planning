package edu.csu2017sp314.DTR02.view.gui;

import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.ArrayList;
import java.util.List;

import javafx.scene.Scene;
import javafx.scene.web.WebView;
import javafx.stage.Stage;

public class GoogleWindow {
	private String kmlpath;
	private Stage stage;
	private Scene scene;
	private WebView display;
	private URI webpage;
	private double startLat;
	private double startLon;

	/**
	 * Constructor which opens a new JavaFX window displaying a Google Map
	 * containing the kml generated by a trip.
	 * 
	 * @param filename
	 *            the name of the kml file with which the Google Map needs to
	 *            integrate.
	 */
	public GoogleWindow(String kmlpath) {
		stage = new Stage();
		display = new WebView();
		display.getEngine().setCreatePopupHandler(
				  popupFeatures -> {
					  WebView popup = new WebView();
					  Scene popScene = new Scene(popup,800,600);
					  Stage popStage = new Stage();
					  popStage.setScene(popScene);
					  popStage.show();
					  return popup.getEngine();
				  }
				);
		getStartCoords(kmlpath);
		setFilename(kmlpath);
		if (webpage != null) {
			stage.show();
			scene = new Scene(display, 1034, 778);
			stage.setScene(scene);
			try {
				Files.delete(Paths.get("interactive-map.html"));
			} catch (IOException e) {
			}
		}
	}

	public void setFilename(String kmlpath) {
		this.kmlpath = kmlpath;
		stage.setTitle("Interactive Map: " + this.kmlpath);
		try {
			generateWebpage(new File(this.kmlpath).toURI().toURL().toExternalForm());
			display.getEngine().load(webpage.toURL().toExternalForm());
		} catch (MalformedURLException | NullPointerException ex) {
			return;
		}
	}
	
	private void getStartCoords(String kmlpath) {
		startLat = 0;
		startLon = 0;
		try {
			List<String> kml = Files.readAllLines(Paths.get(kmlpath));
			for (String kmlLine : kml) {
				if (kmlLine.contains("<coordinates>")) {
					String[] splitLine = kmlLine.trim().replaceAll("</?\\p{IsAlphabetic}*>", "").split(",");
					startLon = Double.parseDouble(splitLine[0]);
					startLat = Double.parseDouble(splitLine[1]);
					break;
				}
			}
		} catch (IOException e) {
		}
	}

	private void generateWebpage(String kmlURL) {
		try {
			webpage = this.getClass().getResource("/google-map.html").toURI();
			String geoxml = this.getClass().getResource("/geoxml3.js").toURI().toURL().toExternalForm();
			Path resourcePath = new File(webpage).toPath();
			ArrayList<String> html = new ArrayList<String>(Files.readAllLines(resourcePath));
			// replace the example KML with ours
			for (int i = 0; i < html.size(); i++) {
				if (html.get(i).contains("var src = ")) {
					html.set(i, "      var src = '" + kmlURL + "';");
				} else
				if (html.get(i).contains("google.maps.LatLng(")) {
					html.set(i, "          center: new google.maps.LatLng(" + startLat + ", " + startLon + "),");
				} else
				if (html.get(i).contains("geoxml3.js")) {
					html.set(i, "	<script src='"+geoxml+"'></script>");
				}
			}
			Files.write(Paths.get("interactive-map.html"), html, 
					StandardCharsets.UTF_8, 
					StandardOpenOption.CREATE,
					StandardOpenOption.TRUNCATE_EXISTING);
			webpage = new File("interactive-map.html").toURI();
		} catch (IOException | URISyntaxException e) {
			webpage = null;
		}
	}
}
